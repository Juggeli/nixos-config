{
  config,
  lib,
  pkgs,
  ...
}:

with lib;
with lib.plusultra;
let
  cfg = config.plusultra.system.nix;
in
{
  options.plusultra.system.nix = with types; {
    enable = mkBoolOpt true "Whether or not to manage nix configuration.";
  };

  config = mkIf cfg.enable {
    services.nix-daemon = enabled;
    nix =
      let
        users = [
          "root"
          config.plusultra.user.name
        ];
      in
      {
        settings = {
          experimental-features = "nix-command flakes";
          http-connections = 50;
          warn-dirty = false;
          log-lines = 50;
          sandbox = false;
          auto-optimise-store = true;
          trusted-users = users;
          allowed-users = users;

          # @NOTE(jakehamilton): This configuration is generated by nix-installer so I'm adding it here in
          # case it becomes important.
          extra-nix-path = "nixpkgs=flake:nixpkgs";
          build-users-group = "nixbld";
        };

        gc = {
          automatic = true;
          interval = {
            Day = 7;
          };
          options = "--delete-older-than 30d";
          user = config.plusultra.user.name;
        };

        # flake-utils-plus
        generateRegistryFromInputs = true;
        generateNixPathFromInputs = true;
        linkInputs = true;

        package = pkgs.nixVersions.latest;
      };
  };
}
