" vim: filetype=vifm :

" General settings

set vicmd=$EDITOR
set syscalls
set trash
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
            \phistory,fhistory,dirstack,registers,bookmarks,bmarks
set history=1000
set nofollowlinks
set sortnumbers
set undolevels=1000
set vimhelp
set norunexec
set timefmt='%Y.%m.%d %H:%M'
set wildmenu
set wildstyle=popup
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers
set ignorecase
set smartcase
set incsearch
set scrolloff=4
set slowfs=curlftpfs
colorscheme catppuccin

" Icons
source $HOME/.config/vifm/icons.vifm

" Marks

mark h ~/
mark s /mnt/pool/sorted
mark d /mnt/pool/downloads

" Dirs
fileviewer */ eza --tree --level=2 --color=always --icons
fileviewer .*/ eza --tree --level=2 --color=always --icons

" Text files
fileviewer {*.[1-8]},<text/plain> env -uCOLORTERM bat --color always --wrap never --pager never %c -p

" Pdf
filextype {*.pdf},<application/pdf> zathura %c %i &
fileviewer {*.pdf},<application/pdf> pdftotext -nopgbrk %c -

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},
        \<audio/*>
       \ {Play using mpv}
       \ mpv --no-video %c %s,
fileviewer {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,
           \*.aac}
         \ ffprobe -hide_banner -pretty %c 2>&1

" Video
filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]},
         \<video/*>
        \ {Play using mpv}
        \ mpv %c %i
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           \*.as[fx]},
          \<video/*>
         \ ffprobe -hide_banner -pretty %c 2>&1

" Images
filextype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ {View in imv}
        \ imv -n %c %d,
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ kitty +icat --silent --transfer-mode=stream --place=%pwx%ph@%pxx%py %c %N
        \ %pc
        \ kitty icat --clear --silent %pd

" FuseZipMount
filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
        \<application/zip,application/java-archive>
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ tar -tf %f | less,
       \ {Extract here}
       \ tar -vxf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt tar -tf %f

" ArchiveMount
filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,
         \*.tzst},
        \<application/x-tar>
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.xz,*.txz tar -tJf %c
fileviewer *.tar.zst,*.tzst tar -t --zstd -f %c
fileviewer {*.tar},<application/x-tar> tar -tf %c

" Rar2FsMount and rar archives
filetype {*.rar},<application/x-rar>
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.rar},<application/x-rar> unrar v %c

" IsoMount
filetype {*.iso},<application/x-iso9660-image>
        \ mpv %c %i
       " \ {Mount with fuseiso}
       " \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype {*.7z},<application/x-7z-compressed>
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.7z},<application/x-7z-compressed> 7z l %c

filetype * xdg-open

" Customize view columns a bit (enable ellipsis for truncated file names)
set viewcolumns=-{name}..,6{}.

" Start shell in current directory
nnoremap s :!fish<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

if executable('wl-copy')
    " Yank current directory path into primary and selection clipboards
    nnoremap yd :!echo -n %d | wl-copy %i &&
                \ echo -n %d | wl-copy -p %i<cr>
    " Yank current file path into into primary and selection clipboards
    nnoremap yf :!echo -n %c:p | wl-copy %i &&
                \ echo -n %c:p | wl-copy -p %i<cr>
endif

" rename without extension
nnoremap a cW 
" rename with extension
nnoremap A cw

" Open console in current directory
nnoremap ,t :!$TERMINAL &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Quit
nnoremap <space>q :q<cr>

" Sync panels
nnoremap <space>s :sync<cr>

" Show only one panel
nnoremap <space>1 :only<cr>

" Show two panels
nnoremap <space>2 :vsplit<cr>

" fzf
nnoremap <space>f :FZFfind<cr>

" Run command for selected files
:com loop for f in %f; %a "$f"; end

" FZF integration
command! FZFfind :set noquickview | :execute 'goto' fnameescape(term('fd -H | fzf --height 10 2>/dev/tty'))

" Sync with other instances
let &syncregs = $USER

" change status line depending on the windows width size
set statusline="%1* %u:%g %A %2*%3* %T %= %a / %c  %d %2*%1* %E "

" remove previous directory double dot indication
set dotdirs=""
